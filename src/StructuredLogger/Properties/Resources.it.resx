<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
 <data name="OutputItemParameterMessagePrefix" xml:space="preserve">
<value>Elementi di output: </value>
</data>
<data name="ProjectImportSkippedEmptyFile" xml:space="preserve">
<value>Il progetto "{0}" non è stato importato da "{1}" a ({2},{3}) perché il file è vuoto.</value>
</data>
<data name="TaskFound" xml:space="preserve">
<value>Verrà usata l'attività "{0}" dall'assembly "{1}".</value>
</data>
<data name="ToolsVersionInEffectForBuild" xml:space="preserve">
<value>Compilazione con la versione degli strumenti "{0}".</value>
</data>
<data name="OverridingTarget" xml:space="preserve">
<value>Override della destinazione "{0}" nel progetto "{1}" con la destinazione "{2}" del progetto "{3}".</value>
</data>
<data name="TargetSkippedWhenSkipNonexistentTargets" xml:space="preserve">
<value>La destinazione "{0}" è stata ignorata perché non esiste nel progetto e SkipNonexistentTargets è impostato su true.</value>
</data>
<data name="ProjectImportSkippedFalseCondition" xml:space="preserve">
<value>Il progetto "{0}" non è stato importato da "{1}" a ({2},{3}), a causa della condizione false. ({4}) ha restituito ({5}).</value>
</data>
<data name="ProjectImportSkippedNoMatches" xml:space="preserve">
<value>Il progetto "{0}" non è stato importato da "{1}" a ({2},{3}) perché non esistono file corrispondenti.</value>
</data>
<data name="SearchPathsForMSBuildExtensionsPath" xml:space="preserve">
<value>I percorsi di ricerca usati per {0} sono {1}</value>
</data>
<data name="TaskParameterPrefix" xml:space="preserve">
<value>Parametro attività:</value>
</data>
<data name="DuplicateImport" xml:space="preserve">
<value>MSB4011: non è possibile importare di nuovo "{0}". L'importazione è già stata eseguita in "{1}". Si tratta probabilmente di un errore di creazione della compilazione. Questa importazione successiva verrà ignorata. {2}</value>
</data>
<data name="TargetAlreadyCompleteFailure" xml:space="preserve">
<value>La destinazione "{0}" è stata ignorata. La compilazione non era riuscita in precedenza.</value>
</data>
<data name="General.OverridingProperties" xml:space="preserve">
<value>Override delle proprietà globali per il progetto "{0}" con:</value>
</data>
<data name="ItemGroupRemoveLogMessage" xml:space="preserve">
<value>Elementi rimossi: </value>
</data>
<data name="ProjectImported" xml:space="preserve">
<value>Importazione del progetto "{0}" nel progetto "{1}" a ({2},{3}).</value>
</data>
<data name="PropertyGroupLogMessage" xml:space="preserve">
<value>Proprietà impostata: {0}={1}</value>
</data>
<data name="General.AdditionalProperties" xml:space="preserve">
<value>Proprietà aggiuntive per il progetto "{0}":</value>
</data>
<data name="TargetDoesNotExistBeforeTargetMessage" xml:space="preserve">
<value>La destinazione "{0}" elencata in un attributo BeforeTargets in "{1}" non esiste nel progetto e verrà ignorata.</value>
</data>
<data name="TaskFoundFromFactory" xml:space="preserve">
<value>Verrà usata l'attività "{0}" dalla factory delle attività "{1}".</value>
</data>
<data name="ProjectImportSkippedMissingFile" xml:space="preserve">
<value>Il progetto "{0}" non è stato importato da "{1}" a ({2},{3}) perché il file non esiste.</value>
</data>
<data name="TargetSkippedFalseCondition" xml:space="preserve">
<value>Destinazione"{0}" ignorata. Condizione false. ({1}) ha restituito ({2}).</value>
</data>
<data name="TaskSkippedFalseCondition" xml:space="preserve">
<value>Attività "{0}" ignorata. Condizione false. ({1}) ha restituito ({2}).</value>
</data>
<data name="ItemGroupIncludeLogMessagePrefix" xml:space="preserve">
<value>Elementi aggiunti: </value>
</data>
<data name="OutputPropertyLogMessage" xml:space="preserve">
<value>Proprietà di output: {0}={1}</value>
</data>
<data name="ProjectImportSkippedInvalidFile" xml:space="preserve">
<value>Il progetto "{0}" non è stato importato da "{1}" a ({2},{3}) perché il file non è valido.</value>
</data>
<data name="TargetAlreadyCompleteSuccess" xml:space="preserve">
<value>La destinazione "{0}" è stata ignorata. La compilazione era stata completata in precedenza.</value>
</data>
<data name="TryingExtensionsPath" xml:space="preserve">
<value>Si sta provando a importare {0} usando il percorso delle estensioni {1}</value>
</data>
<data name="PropertyReassignment" xml:space="preserve">
<value>Riassegnazione della proprietà: $({0})="{1}" (valore precedente: "{2}") in {3}</value>
</data>
<data name="General.GlobalProperties" xml:space="preserve">
<value>Proprietà globali:</value>
</data>
<data name="General.UndefineProperties" xml:space="preserve">
<value>Rimozione proprietà:</value>
</data>
<data name="ResolveAssemblyReference.UnifiedPrimaryReference" xml:space="preserve">
<value>Riferimento primario unificato "{0}".</value>
</data>
<data name="ResolveAssemblyReference.AssemblyFoldersExSearchLocations" xml:space="preserve">
<value>Percorso AssemblyFoldersEx: "{0}"</value>
</data>
<data name="GetSDKReferenceFiles.ConflictReferenceDifferentSDK" xml:space="preserve">
<value>Conflitto tra due riferimenti con lo stesso nome file tra gli SDK "{0}" e "{1}". Viene scelto "{2}" invece di "{3}" perché è stato risolto per primo.</value>
</data>
<data name="ResolveAssemblyReference.Dependency" xml:space="preserve">
<value>Dipendenza "{0}".</value>
</data>
<data name="ResolveAssemblyReference.PrimaryReference" xml:space="preserve">
<value>Riferimento primario "{0}".</value>
</data>
<data name="Copy.HardLinkComment" xml:space="preserve">
<value>Creazione del collegamento reale per copiare "{0}" in "{1}".</value>
</data>
<data name="Copy.DidNotCopyBecauseOfFileMatch" xml:space="preserve">
<value>Non è possibile eseguire la copia dal file "{0}" al file "{1}". Il parametro "{2}" è stato impostato su "{3}" nel progetto e la dimensione e il timestamp dei file corrispondono.</value>
</data>
<data name="ResolveAssemblyReference.SearchPath" xml:space="preserve">
<value>Per SearchPath "{0}".</value>
</data>
<data name="ResolveAssemblyReference.UnifiedDependency" xml:space="preserve">
<value>Dipendenza unificata "{0}".</value>
</data>
<data name="GetSDKReferenceFiles.ConflictReferenceSameSDK" xml:space="preserve">
<value>Conflitto tra due riferimenti con lo stesso nome file risolti nell'SDK "{0}". Viene scelto "{1}" invece di "{2}" perché è stato risolto per primo.</value>
</data>
<data name="GetSDKReferenceFiles.ConflictRedistDifferentSDK" xml:space="preserve">
<value>Conflitto tra due file della cartella dei pacchetti ridistribuibili che hanno lo stesso percorso di destinazione "{0}" tra gli SDK "{1}" e "{2}". Verrà scelto "{3}" invece di "{4}" perché è stato risolto per primo.</value>
</data>
<data name="Copy.FileComment" xml:space="preserve">
<value>Copia del file da "{0}" a "{1}".</value>
</data>
</root>